{"version":3,"sources":["webpack:///./src/views/resource/detail.vue?6a83","webpack:///src/views/resource/detail.vue","webpack:///./src/views/resource/detail.vue?78c5","webpack:///./src/views/resource/detail.vue","webpack:///./src/assets/images/task1.jpg"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","attrs","_v","_m","staticRenderFns","components","ResourceView","data","taskStep","optionType","optionTypes","list","optionList","nodeList","expandedKeys","methods","load","push","id","index","title","people","onTabChange","document","querySelector","key","scrollIntoView","onNodeSelect","console","log","onOptionChange","mounted","component","module","exports"],"mappings":"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","file":"js/chunk-30a1036c.3c6f336f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-task-list\"},[_c('div',{staticClass:\"index-main bg-net\",staticStyle:{\"border-top\":\"1px solid #efefef\"}},[_c('div',{staticClass:\"index-main-section v-pt-lg\"},[_c('a-breadcrumb',[_c('a-breadcrumb-item',{attrs:{\"href\":\"\"}},[_vm._v(\"首页\")]),_c('a-breadcrumb-item',{attrs:{\"href\":\"\"}},[_vm._v(\"全部资源\")]),_c('a-breadcrumb-item',{attrs:{\"href\":\"\"}},[_vm._v(\"资源详情\")])],1)],1),_c('div',{staticClass:\"index-main-section v-pa-md bg-white resource-overview-wrapper\"},[_c('div',{staticClass:\"resource-overview flex\"},[_vm._m(0),_c('div',{staticClass:\"col resource-overview-info\"},[_c('h2',{staticClass:\"text-justify\"},[_vm._v(\"扫雷游戏\")]),_c('div',{staticClass:\"text-justify ellipsis-3-lines v-my-md\"},[_vm._v(\" 本次测试项目设计扫雷游戏。扫雷是一款经典的大众类的益智小游戏，游戏目标是在最短的时间内根据点击格子出现的数字找出所有非雷格子，同时避免踩雷。 \")]),_c('div',[_c('a-rate',{attrs:{\"default-value\":4.5,\"allow-half\":\"\",\"disabled\":\"\"}}),_c('span',{staticClass:\"ant-rate-text\"},[_vm._v(\"4.5\")])],1),_c('div',{staticClass:\"resource-action\"},[_c('a-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"立即参加\")])],1)])])]),_c('div',{staticClass:\"index-main-section v-pb-lg\"},[_c('resource-view')],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"resource-overview-img\"},[_c('img',{attrs:{\"src\":require(\"@/assets/images/task1.jpg\")}}),_c('span',{staticClass:\"resource-overview-state\"},[_vm._v(\"免费\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page page-task-list\">\n    <div class=\"index-main bg-net\" style=\"border-top: 1px solid #efefef\">\n      <div class=\"index-main-section v-pt-lg\">\n        <a-breadcrumb>\n          <a-breadcrumb-item href=\"\">首页</a-breadcrumb-item>\n          <a-breadcrumb-item href=\"\">全部资源</a-breadcrumb-item>\n          <a-breadcrumb-item href=\"\">资源详情</a-breadcrumb-item>\n        </a-breadcrumb>\n      </div>\n      <!-- <a-row>\n        <a-col :span=\"12\"> col-12 </a-col>\n        <a-col :span=\"12\"> col-12 </a-col>\n      </a-row> -->\n      <div class=\"index-main-section v-pa-md bg-white resource-overview-wrapper\">\n        <div class=\"resource-overview flex\">\n          <div class=\"resource-overview-img\">\n            <img src=\"~@/assets/images/task1.jpg\" />\n            <span class=\"resource-overview-state\">免费</span>\n          </div>\n          <div class=\"col resource-overview-info\">\n            <h2 class=\"text-justify\">扫雷游戏</h2>\n            <div class=\"text-justify ellipsis-3-lines v-my-md\">\n              本次测试项目设计扫雷游戏。扫雷是一款经典的大众类的益智小游戏，游戏目标是在最短的时间内根据点击格子出现的数字找出所有非雷格子，同时避免踩雷。\n            </div>\n            <div><a-rate :default-value=\"4.5\" allow-half disabled /><span class=\"ant-rate-text\">4.5</span></div>\n            <div class=\"resource-action\">\n              <a-button type=\"primary\">立即参加</a-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"index-main-section v-pb-lg\">\n        <resource-view />\n        <!-- <div class=\"resource-container\" style=\"min-height: 500px\" ref=\"content\">\n          <div class=\"resource-catalogs full-height\">\n            <a-affix>\n              <div class=\"resource-header flex items-center\">\n                <span>资源目录</span>\n              </div>\n            </a-affix>\n            <a-affix :offsetTop=\"40\">\n              <div class=\"resource-catalogs-list\" style=\"min-height: calc(100% - 32px); padding: 10px\">\n                <a-tree default-expand-all show-line :default-expanded-keys=\"expandedKeys\" :expandedKeys.sync=\"expandedKeys\" draggable :tree-data=\"nodeList\" @select=\"onNodeSelect\" />\n              </div>\n            </a-affix>\n          </div>\n          <div class=\"resource-content v-ml-auto col full-height\">\n            <a-affix>\n              <div class=\"resource-header flex items-center\">\n                <span>资源详情</span>\n              </div>\n            </a-affix>\n            <div class=\"resource-content-body border-left\" style=\"min-height: calc(100% - 32px)\">\n              <span class=\"anchor\" id=\"tab1\"></span>\n              <h3 id=\"tab01\">简介</h3>\n              <p>本次测试项目设计扫雷游戏。</p>\n              <span class=\"anchor\" id=\"tab2\"></span>\n              <h3 id=\"tab02\">任务描述</h3>\n              <p>扫雷是一款经典的大众类的益智小游戏，游戏目标是在最短的时间内根据点击格子出现的数字找出所有非雷格子，同时避免踩雷。分成以下三个任务：</p>\n              <p>1、 阶段一：LCD12864驱动设计（60分钟）；</p>\n              <p>2、 阶段二：基本游戏功能（120分钟）；</p>\n              <p>3、 阶段三：综合游戏设计（180分钟）。</p>\n              <span class=\"anchor\" id=\"tab3\"></span>\n              <h3 id=\"tab03\">编程环境</h3>\n              <p>编程环境如下图所示：</p>\n              <p class=\"text-center\"><img src=\"~@/assets/images/task_body_1.png\" /></p>\n              <span class=\"anchor\" id=\"tab4\"></span>\n              <h3 id=\"tab04\">接口表</h3>\n              <p class=\"text-center\"><img src=\"~@/assets/images/task_body_2.png\" /></p>\n              <h3 id=\"tab05\">游戏说明</h3>\n              <p>扫雷是一款经典的大众类的益智小游戏，游戏目标是在最短的时间内根据点击格子出现的数字找出所有非雷格子，同时避免踩雷，下面对游戏的一些概念进行解释说明。</p>\n              <span class=\"anchor\" id=\"tab5-1\"></span>\n              <p class=\"text-bold\">定义说明</p>\n              <p> 周边：指坐标点周边3x3的区域；</p>\n              <p> 地雷点：点阵屏上显示为红色，有地雷的点称作地雷点</p>\n              <p> 危险点：点阵屏上显示为蓝色，周边有地雷的点称作危险点，危险点可以获取周边3x3的区域中地雷数量</p>\n              <p> 安全点：点阵屏上显示为绿色，周边没有地雷的点称作安全点</p>\n              <p> 标记点：点阵屏上显示为紫色，玩家标记的点称为标记点</p>\n              <span class=\"anchor\" id=\"tab5-2\"></span>\n              <p class=\"text-bold\">操作说明</p>\n              <p> 光标移动：通过拨动摇杆控制光标移动</p>\n              <p> 标记地雷：SW16控制打开/关闭标记操作，使能标记时，单击摇杆按键，光标所在点被标记，如果该点已经标记，则取消标记。</p>\n              <p> 单击打开：在不使能标记时，单击摇杆按键，对于非标记点执行打开操作</p>\n              <p> 双击：在已经打开的危险点上双击，周边标记点的数量等于危险点周边地雷数量，那么打开周边未标记的点</p>\n              <span class=\"anchor\" id=\"tab5-3\"></span>\n              <p class=\"text-bold\">游戏裁决</p>\n              <p> 游戏失败：打开了地雷点</p>\n              <p> 游戏胜利：剩余的未打开点数等于地雷点数。</p>\n              <p class=\"text-center\"><img src=\"~@/assets/images/task_body_3.png\" /></p>\n              <div class=\"v-pl-md\">\n                <p>LCD第一行最左侧为标记图标，使能标记时，显示 图标，不使能时不显示，默认不使能标记</p>\n                <p>LCD第一行中间为游戏状态图标：游戏中显示 图标，游戏胜利显示 图标，游戏失败显示 图标</p>\n                <p>LCD第一行最右侧为调试图标，按下SW15打开/关闭调试模拟，调试模拟时显示 图标，不使能时不显示，调试模拟默认关闭</p>\n                <p>LCD第二行显示本局已用时间</p>\n                <p>LCD第三行显示剩余的地雷数量（总地雷数量 — 标记点数）</p>\n                <p>\n                  LCD第四行显示光标所在点的周边地雷数量，在调试模拟下，所有点都可以显示周边地雷数量（地雷点显示为-1，安全点显示为00，危险点显示周边地雷数）；在正常模式下，只显示已经打开点的周边地雷数量，未打开的点显示”--”。\n                </p>\n              </div>\n              <span class=\"anchor\" id=\"tab6\"></span>\n              <h3 id=\"tab06\">编程任务</h3>\n              <span class=\"anchor\" id=\"tab6-1\"></span>\n              <p class=\"text-bold\">第一阶段编程任务</p>\n              <p>本次任务使用串行接口驱动LCD12864，请打开文件《lcd12864.c》和《lcd12864.h》补全相关函数。</p>\n              <p>阶段 1.1</p>\n              <p>串行模式下的接口时序图如下图所示。 串行数据传送共分三个字节完成：</p>\n              <p>第一字节：串口控制—格式 11111AB0 （A 为数据传送方向控制：H 表示数据从 LCD 到 MCU，L 表示数据从 MCU 到 LCD； B 为数据类型选择：H 表示数据是显示数据，L 表示数据是控制指令）</p>\n              <p>第二字节：(并行)8 位数据的高 4 位—格式 DDDD0000</p>\n              <p>第三字节：(并行)8 位数据的低 4 位—格式 DDDD0000</p>\n              <p>详细说明可以参考ST7920的器件手册第26页。</p>\n              <p class=\"text-center\"><img src=\"~@/assets/images/task_body_4.png\" /></p>\n              <p>请完成函数void sendFrame(uint32_t data)，向LCD12864发送一组数据，data是要发送的一组数据，低24bit有效，从高位开始发送。</p>\n              <p>阶段1.2</p>\n              <p>请实现向LCD12864写控制命令和写数据的函数，这些函数需要调用阶段1.1的函数sendFrame:</p>\n              <p> void writeCmd(uint8_t cByte)，向LCD12864发送控制命令，cByte是控制命令字节；</p>\n              <p> void writeData(uint8_t dByte) ，向LCD12864发送数据，dByte是要发送的数据字节；</p>\n              <p>在《user_function.c》的setup函数中已经写了LCD的测试用例，如果你的答案正确，可以在LCD屏幕上看到“LCD12864工作正常”的字样。</p>\n              <span class=\"anchor\" id=\"tab6-2\"></span>\n              <p class=\"text-bold\">第二阶段编程任务</p>\n              <p>阶段 2.1：标记图标的显示与控制</p>\n              <p>在游戏过程中，对地雷点进行标记前需要打开标记功能，标记功能打开时,在LCD的左上角显示标记图标 ，按下SW16可以打开或关闭标记功能。</p>\n              <p>请完成上述功能，按下一次SW16，显示标记图标，再按下一次SW16，不显示标记图标。</p>\n              <p>...</p>\n              <p>...</p>\n              <p>...</p>\n              <span class=\"anchor\" id=\"tab6-3\"></span>\n              <p class=\"text-bold\">第三阶段编程任务</p>\n              <p>任务 3.1：游戏计时</p>\n              <p>在LCD的第二行显示“游戏时长: MM:SS ”,MM为分钟数，SS为秒钟数，保留前置0，时间为当前局游戏的持续时间。</p>\n              <p>任务 3.2：光标功能</p>\n              <p>\n                在游戏过程中，在点阵屏上使用以2Hz闪烁的像素点作为光标，在黑色的点上光标为白色，在有颜色的点上，光标与当前点颜色相同；可以通过摇杆移动光标（上、下、左、右四个方向），光标可以跨越边界移动。游戏结束的时候不显示光标，游戏刚开始时光标在左上角。\n              </p>\n              <p>...</p>\n              <p>...</p>\n              <p>...</p>\n              <p>任务 3.10：调试功能</p>\n              <p>\n                在游戏过程，打开调试功能，所有的地雷点可见，未被标记的地雷点显示红色，被标记的地雷点还是显示紫色；在LCD的第四行显示周边地雷数，光标在危险点时显示周边地雷数，在安全点时显示“00”，在地雷点时显示“-1”。\n              </p>\n            </div>\n          </div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { scrollToElement } from '@/utils/scroll'\nimport ResourceView from '../common/resource-view'\n// import ResourceView from '../common/resource-view.vue'\n// const StackBlur = require('stackblur-canvas')\nexport default {\n  components: {\n    ResourceView,\n  },\n  data() {\n    return {\n      taskStep: 'tab1',\n      optionType: 1,\n      optionTypes: ['全部资源', '办公效率', '职业发展', '编程开发', '产品和设计', '生活方式', '亲子教育', '语言学习'],\n      list: [],\n      optionList: [],\n      nodeList: [\n        { key: '1', title: '简介' },\n        { key: '2', title: '任务描述' },\n        { key: '3', title: '编程环境' },\n        { key: '4', title: '接口表', children: [] },\n        {\n          key: '5',\n          title: '游戏说明',\n          children: [\n            { key: '5-1', title: '定义说明' },\n            { key: '5-2', title: '操作说明' },\n            { key: '5-3', title: '游戏裁决', isLeaf: true },\n          ],\n        },\n        {\n          key: '6',\n          title: '编程任务',\n          children: [\n            { key: '6-1', title: '第一阶段编程任务' },\n            { key: '6-2', title: '第二阶段编程任务' },\n            {\n              key: '6-3',\n              title: '第三阶段编程任务',\n              children: [\n                { key: '6-3-1', title: '任务 3.1：游戏计时', children: [] },\n                { key: '6-3-2', title: '任务 3.2：光标功能', children: [] },\n                { key: '6-3-3', title: '任务 3.3：调试功能', children: [] },\n              ],\n            },\n          ],\n        },\n      ],\n      expandedKeys: ['1', '2', '3', '4', '5', '6', '6-3'],\n    }\n  },\n  methods: {\n    load() {\n      let list = []\n      for (let index = 1; index < 20; index++) {\n        list.push({\n          id: index,\n          title: 'B模块 嵌入式编程' + index,\n          people: 1345,\n        })\n      }\n      this.list = list\n    },\n    onTabChange(key) {\n      document.querySelector('#' + key).scrollIntoView(true)\n    },\n    onNodeSelect(keys, data) {\n      // console.log('onNodeSelect', keys, data.node.eventKey)\n      const node = data.node\n      console.log(document.querySelector(`#tab${node.eventKey}`))\n      scrollToElement(document.querySelector(`#tab${node.eventKey}`))\n    },\n    onOptionChange() {},\n  },\n  mounted() {\n    this.load()\n    // let canvas = document.querySelector('#maskCanvas')\n    // let ctx = canvas.getContext('2d')\n    // ctx.fillStyle = 'transparent'\n    // ctx.fillRect(0, 0, 300, 1000)\n    // StackBlur.canvasRGBA('maskCanvas', 150, 150, 300, 1000, 90)\n  },\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./detail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./detail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./detail.vue?vue&type=template&id=5ff94c0a&\"\nimport script from \"./detail.vue?vue&type=script&lang=js&\"\nexport * from \"./detail.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/task1.d57a89d9.jpg\";"],"sourceRoot":""}